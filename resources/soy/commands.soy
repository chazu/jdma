/******************************************************************************
 * Copyright (c) 2002-2012 Peter 'Merlin' Balsiger and Fred 'Mythos' Dobler
 * All rights reserved
 *
 * This file is part of Dungeon Master Assistant.
 *
 * Dungeon Master Assistant is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Dungeon Master Assistant is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Dungeon Master Assistant; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *****************************************************************************/

/**
 * The basic templates for rendering entries.
 */

{namespace dma.commands autoescape="false"}

/**
 * A link to a product.
 *
 * @param arg The arguments to the command.
 * @param opt The optional arguments, if any
 */
{template .Product}
  {call dma.page.link}
    {param url: '/product/' + ($opt.0 ? $opt.0 : $arg.0) /}
    {param text: $arg.0 /}
    {param class: 'Product' /}
  {/call}
{/template}

/**
 * A link to a place.
 *
 * @param arg The arguments to the command.
 */
{template .Place}
  {call dma.page.link}
    {param url: '/place/' + $arg.0 /}
    {param text: $arg.0 /}
    {param class: 'Place' /}
  {/call}
{/template}

/**
 * A link to a god.
 *
 * @param arg The arguments to the command.
 */
{template .God}
  {call dma.page.link}
    {param url: '/god/' + $arg.0 /}
    {param text: $arg.0 /}
    {param class: 'God' /}
  {/call}
{/template}

/**
 * A link to a class.
 *
 * @param arg The arguments to the command.
 */
{template .Class}
  {call dma.page.link}
    {param url: '/class/' + $arg.0 /}
    {param text: $arg.0 /}
    {param class: 'Class' /}
  {/call}
{/template}

/**
 * A link to an Item.
 *
 * @param arg The arguments to the command.
 */
{template .Item}
  {call dma.page.link}
    {param url: '/item/' + $arg.0 /}
    {param text: $arg.0 /}
    {param class: 'Item' /}
  {/call}
{/template}

/**
 * A link to a Skill.
 *
 * @param arg The arguments to the command.
 */
{template .Skill}
  {call dma.page.link}
    {param url: '/skill/' + $arg.0 /}
    {param text: $arg.0 /}
    {param class: 'Skill' /}
  {/call}
{/template}

/**
 * A link to a Feat.
 *
 * @param arg The arguments to the command.
 */
{template .Feat}
  {call dma.page.link}
    {param url: '/feat/' + $arg.0 /}
    {param text: $arg.0 /}
    {param class: 'Feat' /}
  {/call}
{/template}

/**
 * A link to a Spell.
 *
 * @param arg The arguments to the command.
 */
{template .Spell}
  {call dma.page.link}
    {param url: '/spell/' + $arg.0 /}
    {param text: $arg.0 /}
    {param class: 'Spell' /}
  {/call}
{/template}

/**
 * A link to a Group.
 *
 * @param arg The arguments to the command.
 */
{template .Group}
  {call dma.page.link}
    {param url: '/group/' + $arg.0 /}
    {param text: $arg.0 /}
    {param class: 'Group' /}
  {/call}
{/template}

/**
 * A link to a Group.
 *
 * @param arg The arguments to the command.
 */
{template .NPC}
  {call dma.page.link}
    {param url: '/npc/' + $arg.0 /}
    {param text: $arg.0 /}
    {param class: 'NPC' /}
  {/call}
{/template}

/**
 * A link to a Monster.
 *
 * @param arg The arguments to the command.
 */
{template .Monster}
  {call dma.page.link}
    {param url: '/monster/' + $arg.0 /}
    {param text: $arg.0 /}
    {param class: 'Monster' /}
  {/call}
{/template}

/**
 * A Spell reference.
 *
 * @param arg The arguments to the command.
 */
{template .SpellRef}
  {call dma.page.link}
    {param url: '/spell/' + $arg.0 /}
    {param text: $arg.0 /}
    {param class: 'Spell' /}
  {/call}
{/template}

/**
 * A reference.
 *
 * @param arg The arguments to the command.
 * @param opt The optional arguments.
 */
{template .Reference}
  {call dma.page.link}
    {param url: '/' + $arg.0 + '/' + $arg.1 /}
    {param text: $arg.1 /}
    {param class: camel($arg.0) /}
  {/call}
  <A class="{camel($arg.0)}" onclick="details('/{$arg.0}/{$arg.1}')">
    {$arg.1}
  </A>
  :{sp}{reference('base ' + $arg.0 + '/' + $arg.1, $opt)}
{/template}

/**
 * A popup/tooltip window.
 *
 * @param arg The arguments to the command.
 * @param opt The optional arguments, if any
 */
{template .window}
  <span class="windowed">
    <span class="window{if $opt.1} {$opt.1}{/if}">{$arg.1}</span>
    {$arg.0}
  </span>
{/template}

/**
 * A simple divider.
 *
 * @param arg The arguments to the command.
 * @param opt The optional arguments, if any
 */
{template .divider}
  <div {if $opt.0}id="{$opt.0}" {/if}class="{$arg.0}">
    {$arg.1}
  </div>
{/template}

/**
 * A simple list.
 *
 * @param arg The arguments to the command.
 */
{template .list}
  <ul>
    {foreach $argument in $arg}
      <li>{$argument}</li>
    {/foreach}
  </ul>
{/template}

/**
 * A simple span.
 *
 * @param arg The arguments to the command.
 */
{template .span}
  <span class="{$arg.0}">
    {$arg.1}
  </span>
{/template}

/**
 * A command used for parsing in the old style.
 *
 * @param arg The arguments to the command.
 */
{template .baseCommand}
  {foreach $argument in $arg}
    {$argument}
  {/foreach}
{/template}

/**
 * Start a new paragraph.
 */
{template .par}
  <div class="par"></div>
{/template}

/**
 * Special hat character.
 *
 * @param arg The arguments to the command.
 */
{template .hat}
  {switch $arg.0}
    {case 'u'}
      &ucirc;
    {case 'U'}
      &Ucirc;
    {case 'o'}
      &ocirc;
    {case 'O'}
      &Ocirc;
    {case 'a'}
      &acirc;
    {case 'A'}
      &Acirc;
    {case 'i'}
      &icirc;
    {case 'I'}
      &Icirc;
    {default}
      ^{$arg.0}
  {/switch}
{/template}

/**
 * Special hat character.
 *
 * @param arg The arguments to the command.
 */
{template .umlaut}
  &{$arg.0}uml;
{/template}

/**
 * Setting bold text.
 *
 * @param arg The arguments to the command.
 */
{template .bold}
  <strong>{$arg.0}</strong>
{/template}

/**
 * Setting tiny text.
 *
 * @param arg The arguments to the command.
 */
{template .tiny}
  <span class="size-tiny">{$arg.0}</span>
{/template}

/**
 * Setting footnote text.
 *
 * @param arg The arguments to the command.
 */
{template .footnote}
  <span class="size-footnote">{$arg.0}</span>
{/template}

/**
 * Setting script text.
 *
 * @param arg The arguments to the command.
 */
{template .script}
  <span class="size-script">{$arg.0}</span>
{/template}

/**
 * Setting small text.
 *
 * @param arg The arguments to the command.
 */
{template .small}
  <span class="size-small">{$arg.0}</span>
{/template}

/**
 * Setting normal text.
 *
 * @param arg The arguments to the command.
 */
{template .normal}
  <span class="size-normal">{$arg.0}</span>
{/template}

/**
 * Setting large text.
 *
 * @param arg The arguments to the command.
 */
{template .large}
  <span class="size-large">{$arg.0}</span>
{/template}

/**
 * Setting larger text.
 *
 * @param arg The arguments to the command.
 */
{template .larger}
  <span class="size-larger">{$arg.0}</span>
{/template}

/**
 * Setting largest text.
 *
 * @param arg The arguments to the command.
 */
{template .largest}
  <span class="size-largest">{$arg.0}</span>
{/template}

/**
 * Setting huge text.
 *
 * @param arg The arguments to the command.
 */
{template .huge}
  <span class="size-huge">{$arg.0}</span>
{/template}

/**
 * Setting huger text.
 *
 * @param arg The arguments to the command.
 */
{template .huger}
  <span class="size-huger">{$arg.0}</span>
{/template}

/**
 * Setting emphasized.
 *
 * @param arg The arguments to the command.
 */
{template .em}
  <emph>{$arg.0}</emph>
{/template}

/**
 * Setting fractions.
 *
 * @param arg The arguments to the command.
 * @param opt The optional arguments, if any
 */
{template .frac}
  {if $opt and $opt.0}
    {$opt.0}
  {/if}
  <sup>{$arg.0}</sup>&frasl;<sub>{$arg.1}</sub>
{/template}

/**
 * Color some text.
 *
 * @param arg The arguments to the command.
 */
{template .color}
  <span class="color {$arg.0}">{$arg.1}</span>
{/template}