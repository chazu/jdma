/* ****************************************************************************
 * Copyright (c) 2002-2012 Peter 'Merlin' Balsiger and Fred 'Mythos' Dobler
 * All rights reserved
 *
 * This file is part of Dungeon Master Assistant.
 *
 * Dungeon Master Assistant is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Dungeon Master Assistant is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Dungeon Master Assistant; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *****************************************************************************/

/*
 * Templates for base items
 */
{delpackage encounter}
{namespace dma.entry.encounter autoescape="false"}

/**
 * The contents part of the page.
 *
 * @param entry The entry rendered.
 */
{deltemplate dma.entry.page}
  {if $ij.params.card}
    {call dma.card.item}
      {param entry: $entry /}
    {/call}
  {elseif $ij.params.smallcard}
    {call dma.card.item_small}
      {param entry: $entry /}
    {/call}
  {elseif $ij.params.tinycard}
    {call dma.card.item_tiny}
      {param entry: $entry /}
    {/call}
  {else}
    {if $entry.isBase}
      {call dma.navigation.navigation}
        {param entries:
            [[ 'label': $entry.type.link, 'url': '/' + $entry.type.multilink ],
            [ 'label': $entry.name, 'url': $entry.path ]] /}
      {/call}
    {else}
      {call dma.navigation.entryNavigation}
        {param entry: $entry /}
      {/call}
    {/if}

     <div class="leading">
      {delcall dma.entry.files.main}
        {param entry: $entry /}
      {/delcall}
      <div class="entrytitle">
        <div class="title-actions">
          {if $ij.isDM}
            <script>
              gui.addAction('delete', 'Delete',
                             function() {lb}
                             if(confirm('Do you really want to delete this?'))
                                   util.ajax('/actions/remove',
                                     {lb} key: '{$entry.key |escapeJs}' {rb},
                                     null,
                                     true);
                             {rb});
            </script>
            {call dma.page.link}
              {param url: $entry.name + '.summary' /}
              {param text}
                <div class="caption-container">
                  <div class="summary sprite large"></div>
                  <div>summary</div>
                </div>
              {/param}
            {/call}
            {call dma.page.link}
              {param url: $entry.name + '.dma' /}
              {param text}
                <div class="caption-container">
                  <div class="document sprite large"></div>
                  <div>dma</div>
                </div>
              {/param}
            {/call}
          {/if}
          {call dma.page.link}
            {param url: $entry.name + '.print' /}
            {param text}
              <div class="caption-container">
                <div class="print sprite large"></div>
                <div>print</div>
              </div>
            {/param}
          {/call}
        </div>
        {delcall dma.entry.title}
          {param entry: $entry /}
        {/delcall}
        <div class="description">
          {call dma.value.withbase}
            {param canEdit: $ij.isDM /}
            {param entry: $entry /}
            {param value: $entry.description /}
            {param ifempty: '(no description)' /}
          {/call}
        </div>
        <div class="short-description">
          {call dma.value.withbase}
            {param canEdit: $ij.isDM /}
            {param entry: $entry /}
            {param value: $entry.short_description /}
            {param ifempty: '(no short description)' /}
          {/call}
        </div>
      </div>
    </div>
    <div id="files" class="files">
      {call dma.value.editable}
        {param canEdit: $ij.isDM /}
        {param name: 'files' /}
        {param value: 'files' /}
        {param key: $entry.key /}
        {param type: 'files' /}
        {param content}
          <div id="files" class="files">
            {foreach $file in $entry.files.other}
              <div class="file">
                <img src="{if $file.type == 'application/pdf'}/icons/pdf.png
                          {else}{$file.icon}=s50{/if}" alt="{$file.name}"
                     class="image file"
                     onclick="util.link(event, '{$file.icon}')" />
              </div>
            {ifempty}
              <div class="nofiles"></div>
            {/foreach}
          </div>
        {/param}
      {/call}
    </div>
    <div class="values clear">
      {delcall dma.entry.values}
        {param entry: $entry /}
      {/delcall}
    </div>
  {/if}
{/deltemplate}

/**
 * The values for the entry.
 *
 * @param entry The entry rendered
 */
{deltemplate dma.entry.values}
  {if $entry.extension_incomplete and $ij.isDM}
    {call dma.entry.extension}
      {param name}
        {call dma.value.extensionTitle}
          {param value: 'incomplete' /}
        {/call}
      {/param}
      {param content}
        {delcall dma.entry.keyvalue}
          {param entry: $entry /}
          {param name: 'Incomplete' /}
          {param value: $entry.incomplete /}
        {/delcall}
      {/param}
    {/call}
  {/if}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Title' /}
    {param value: $entry.title /}
    {param access: 'dm' /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Base' /}
    {param value: $entry.base /}
    {param access: 'dm' /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Extensions' /}
    {param value: $entry.extensions /}
    {param access: 'dm' /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Synonyms' /}
    {param value: $entry.synonyms /}
    {param noedit: true /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Categoeries' /}
    {param value: $entry.categories /}
    {param noedit: true /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Number' /}
    {param value: $entry.number /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Monsters' /}
    {param value: $entry.monsters /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Items' /}
    {param value: $entry.items /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Traps' /}
    {param value: $entry.traps /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Hazards' /}
    {param value: $entry.hazards /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Obstacles' /}
    {param value: $entry.obstacles /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Secrets' /}
    {param value: $entry.secrets /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Events' /}
    {param value: $entry.events /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Rules' /}
    {param value: $entry.rules /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Spells' /}
    {param value: $entry.spells /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'EL' /}
    {param value: $entry.EL /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Location' /}
    {param value: $entry.location /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Doors' /}
    {param value: $entry.doors /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Floor' /}
    {param value: $entry.floor /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Ceiling' /}
    {param value: $entry.ceiling /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Walls' /}
    {param value: $entry.walls /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Feel' /}
    {param value: $entry.feel /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Sound' /}
    {param value: $entry.sound /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Smell' /}
    {param value: $entry.smell /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Taste' /}
    {param value: $entry.taste /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Light' /}
    {param value: $entry.light /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Skills' /}
    {param value: $entry.skills /}
    {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Distance' /}
    {param value: $entry.distance /}
    {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'References' /}
    {param value: $entry.references /}
  {/delcall}
  {if length($entry.errors) > 0}
    {delcall dma.entry.keyvalue}
      {param entry: $entry /}
      {param name: 'Errors' /}
      {param content: $entry.errors /}
    {/delcall}
  {/if}
  {if $ij.isAdmin}
    {delcall dma.entry.keyvalue}
      {param entry: $entry /}
      {param name: 'DMA' /}
      {param value: $entry.dmaValues /}
    {/delcall}
  {/if}
{/deltemplate}

/**
 * Template for the list titles.
 */
{deltemplate dma.entry.listtitles}
  {call dma.entry.listtitle}{param title: '' /}{/call}
  {call dma.entry.listtitle}{param title: 'Name' /}{/call}
  {call dma.entry.listtitle}{param title: 'Number' /}{/call}  
  {call dma.entry.listtitle}{param title: 'Worlds' /}{/call}
  {call dma.entry.listtitle}{param title: 'Short description' /}{/call}
{/deltemplate}

/**
 * Template for a single list entry.
 *
 * @param entry The entry to render.
 */
{deltemplate dma.entry.listentry}
  {call dma.entry.listentryvalue}
    {param style: 'extensions' /}
    {param value: $entry.extensions /}
    {param entry: $entry /}
  {/call}
  {call dma.entry.listentryvalue}
    {param style: 'name' /}
    {param content: $entry.name /}
    {param entry: $entry /}
  {/call}
  {call dma.entry.listentryvalue}
    {param style: 'number' /}
    {param value: $entry.number /}
    {param entry: $entry /}
  {/call}
  {call dma.entry.listentryvalue}
    {param style: 'worlds' /}
    {param value: $entry.worlds /}
    {param entry: $entry /}
  {/call}
  {call dma.entry.listentryvalue}
    {param style: 'short' /}
    {param value: $entry.short_description /}
    {param entry: $entry /}
  {/call}
{/deltemplate}

