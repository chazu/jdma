/******************************************************************************
 * Copyright (c) 2002-2012 Peter 'Merlin' Balsiger and Fred 'Mythos' Dobler
 * All rights reserved
 *
 * This file is part of Dungeon Master Assistant.
 *
 * Dungeon Master Assistant is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Dungeon Master Assistant is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Dungeon Master Assistant; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *****************************************************************************/

/**
 * Templates for base products
 */
{delpackage character}
{namespace dma.entry.character}

/**
 * The values for the entry.
 *
 * @param entry The entry rendered
 */
{deltemplate dma.entry.values}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Name' /}
    {param content}
      {call dma.value.editable}
        {param canEdit: $ij.isDM or $ij.isOwner /}
        {param name: 'name' /}
        {param value: $entry.name /}
        {param key: $entry.key /}
        {param type: 'name' /}
        {param content: $entry.name /}
      {/call}
    {/param}
    {param access: 'user' /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Base' /}
    {param value: $entry.base /}
    {param access: 'user' /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Campaign' /}
    {param value: $entry.campaign /}
    {param access: 'user' /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Level' /}
    {param value: $entry.level /}
    {param access: 'user' /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Wealth' /}
    {param content}
      {call .wealth}
        {param wealth: $entry.wealth /}
      {/call}
    {/param}
    {param access: 'owner' /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Carried Weight' /}
    {param content: $entry.weight.print /}
    {param access: 'user' /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Items' /}
    {param content}
      {foreach $item in $entry.items.list}
        {call dma.entry.itemreference}
          {param item: entry($entry.campaign.key + '/item/'
              + $item.print) /}
        {/call}
      {ifempty}
        No items stored.
      {/foreach}
      {if $ij.user}
      {sp}|{sp}
      {call dma.page.link}
        {param js: 'item.create(\'' + $entry.campaign.path + '\', \''
            + $entry.campaign.key + '/character/' + $entry.name + '\');' /}
        {param text: 'add' /}
        {param tooltip: 'Add a new item to this container.' /}
      {/call}
      {/if}
    {/param}
    {param access: 'user' /}
  {/delcall}
{/deltemplate}

/**
 * The container for printing entries.
 *
 * @param entry the entry to format
 * @param first the first entry available, if any
 * @param previous the previous entry, if any
 * @param list the overview of all entries
 * @param next the next entry, if any
 * @param last the last entry, if any
 *
 */
{deltemplate dma.entry.print}
  <h1>{$entry.name}{if $ij.isDM} (DM view){/if}</h1>
  <table>
    <tr><td>Player:</td><td>{$entry.base.print}</td></tr>
    <tr><td>Campaign:</td><td>{$entry.campaign.name}</td></tr>
    <tr><td>Level:</td><td>{$entry.level.print}</td></tr>
    <tr><td>Wealth:</td>
      <td>
        {call .wealth}
          {param wealth: $entry.wealth /}
        {/call}
      </td>
    </tr>
    <tr><td>Weight:</td><td>{$entry.weight.getAsPounds |print} lbs</td></tr>
  </table>
  <h2>Items</h2>
  <div class="item-overview">
    {foreach $item in $entry.items.list}
      {call dma.entry.itemoverview}
        {param item: entry($entry.campaign.key + '/item/' + $item.print) /}
      {/call}
    {ifempty}
      No items yet.
    {/foreach}
  </div>
  <script>
    window.print();
  </script>
{/deltemplate}

/**
 * Print the wealth of a character.
 *
 * @param wealth The wealth to print
 */
{template .wealth private="true"}
  {if $wealth.total < $wealth.lower}
    <span class="error">
      {$wealth.total |number} gp
      (too low, should be around {$wealth.equal |number} gp)
    </span>{sp}
  {elseif $wealth.total > $wealth.higher}
    <span class="error">
      {$wealth.total |number} gp
      (too high, should be around {$wealth.equal |number} gp)
    </span>{sp}
  {elseif $wealth.total < $wealth.lower + $wealth.equal / 2}
    <span class="warning">
      {$wealth.total |number} gp (a little too low, should be around
      {$wealth.equal |number} gp)
    </span>{sp}
  {elseif $wealth.total > $wealth.higher + $wealth.equal / 2}
    <span class="error">
      {$wealth.total |number} gp
      (too high, should be around {$wealth.equal |number} gp)
    </span>{sp}
  {/if}
{/template}