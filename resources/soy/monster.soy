/******************************************************************************
 * Copyright (c) 2002-2012 Peter 'Merlin' Balsiger and Fred 'Mythos' Dobler
 * All rights reserved
 *
 * This file is part of Dungeon Master Assistant.
 *
 * Dungeon Master Assistant is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Dungeon Master Assistant is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Dungeon Master Assistant; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *****************************************************************************/

/**
 * Templates for base monsters.
 */
{delpackage monster}
{namespace dma.entry.monster autoescape="false"}

/**
 * The entry title.
 *
 * @param entry The entry rendered.
 */
{deltemplate dma.entry.title}
  <h1>
    {call dma.value.editable}
      {param canEdit: $ij.isDM /}
      {param name: 'given name' /}
      {param value: $entry.given_name.edit /}
      {param key: $entry.key /}
      {param type: 'string' /}
      {param content: $entry.dmName + ' (' + $entry.name + ')' /}
    {/call}
  </h1>
  {call dma.page.title}
    {param title: $ij.isDM ? $entry.dmName : $entry.playerName /}
  {/call}
{/deltemplate}

/**
 * The values for the entry.
 *
 * @param entry The entry rendered
 */
{deltemplate dma.entry.values}
  {if $entry.incomplete and $ij.isDM}
    {call dma.entry.extension}
      {param name: 'incomplete' /}
      {param content}
        {delcall dma.entry.keyvalue}
          {param entry: $entry /}
          {param name: 'Incomplete' /}
          {param value: $entry.incomplete /}
        {/delcall}
      {/param}
    {/call}
  {/if}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Base' /}
    {param value: $entry.base /}
    {param access: 'dm' /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Extensions' /}
    {param value: $entry.extensions /}
    {param access: 'dm' /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Gender' /}
    {param value: $entry.gender /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Synonyms' /}
    {param value: $entry.synonyms /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Worlds' /}
    {param value: $entry.worlds /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Categoeries' /}
    {param value: $entry.categories /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Hit Points' /}
    {param value: $entry.hp /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Max HP' /}
    {param value: $entry.max_hp /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Size' /}
    {param value: $entry.size /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Type' /}
    {param value: $entry.__type /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Hit Dice' /}
    {param value: $entry.hit_dice /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Speed' /}
    {param value: $entry.speed /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Natural Armor' /}
    {param value: $entry.natural_armor /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Base Attack' /}
    {param value: $entry.base_attack /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Strength' /}
    {param value: $entry.strength /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Dexterity' /}
    {param value: $entry.dexterity /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Constitution' /}
    {param value: $entry.constitution /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Intelligence' /}
    {param value: $entry.intelligence /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Wisdom' /}
    {param value: $entry.wisdom /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Charisma' /}
    {param value: $entry.charisma /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Primary Attacks' /}
    {param value: $entry.primary_attacks /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Secondary Attacks' /}
    {param value: $entry.secondary_attacks /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Space' /}
    {param value: $entry.space /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Reach' /}
    {param value: $entry.reach /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Special Attacks' /}
    {param value: $entry.special_attacks /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Special Qualities' /}
    {param value: $entry.special_qualities /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Class Skills' /}
    {param value: $entry.class_skills /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Feats' /}
    {param value: $entry.feats /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Environment' /}
    {param value: $entry.environment /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Organization' /}
    {param value: $entry.organization /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Challenge Rating' /}
    {param value: $entry.challenge_rating /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Treasure' /}
    {param value: $entry.treasure /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Alignment' /}
    {param value: $entry.alignment /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Advancements' /}
    {param value: $entry.advancements /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Level Adjustment' /}
    {param value: $entry.level_adjustment /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Languages' /}
    {param value: $entry.languages /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Encounter' /}
    {param value: $entry.encounter /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Combat' /}
    {param value: $entry.combat /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Tactics' /}
    {param value: $entry.tactics /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Character' /}
    {param value: $entry.character /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Reproduction' /}
    {param value: $entry.reprodction /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Possesions' /}
    {param value: $entry.possesions /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Possesions' /}
    {param content}
      {foreach $item in $entry.possesions.list}
        {call dma.entry.itemreference}
          {param item: entry($entry.campaign.key + '/item/'
              + $item.print) /}
        {/call}
      {ifempty}
        No items stored.
      {/foreach}
      {if $ij.isDM}
      {sp}|{sp}
      {call dma.page.link}
        {param js: 'item.create(\'' + $entry.campaign.path + '\', \''
            + $entry.campaign.key + '/monster/' + $entry.name + '\');' /}
        {param text: 'add' /}
        {param tooltip: 'Add a new item to this monster.' /}
      {/call}
      {/if}
    {/param}
    {param access: 'dm' /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'Good Saves' /}
    {param value: $entry.good_saves /}
  {/delcall}
  {delcall dma.entry.keyvalue}
    {param entry: $entry /}
    {param name: 'References' /}
    {param value: $entry.references /}
  {/delcall}
  {if length($entry.errors) > 0}
    {delcall dma.entry.keyvalue}
      {param entry: $entry /}
      {param name: 'Errors' /}
      {param content: $entry.errors /}
    {/delcall}
  {/if}
{/deltemplate}

/**
 * Template for the list titles.
 */
{deltemplate dma.entry.listtitles}
  {call dma.entry.listtitle}{param title: '' /}{/call}
  {call dma.entry.listtitle}{param title: 'Name' /}{/call}
  {call dma.entry.listtitle}{param title: 'Type' /}{/call}
  {call dma.entry.listtitle}{param title: 'Size' /}{/call}
  {call dma.entry.listtitle}{param title: 'CR' /}{/call}
  {call dma.entry.listtitle}{param title: 'Worlds' /}{/call}
  {call dma.entry.listtitle}{param title: 'Short description' /}{/call}
{/deltemplate}

/**
 * Template for a single list entry.
 *
 * @param entry The entry to render.
 */
{deltemplate dma.entry.listentry}
  {call dma.entry.listentryvalue}
    {param style: 'extensions' /}
    {param value: $entry.extensions /}
    {param entry: $entry /}
  {/call}
  {call dma.entry.listentryvalue}
    {param style: 'name' /}
    {param content: $entry.name /}
    {param entry: $entry /}
  {/call}
  {call dma.entry.listentryvalue}
    {param style: 'type' /}
    {param value: $entry.__type /}
    {param entry: $entry /}
  {/call}
  {call dma.entry.listentryvalue}
    {param style: 'size' /}
    {param value: $entry.size /}
    {param entry: $entry /}
  {/call}
  {call dma.entry.listentryvalue}
    {param style: 'cr' /}
    {param value: $entry.challenge_rating /}
    {param entry: $entry /}
  {/call}
  {call dma.entry.listentryvalue}
    {param style: 'worlds' /}
    {param value: $entry.worlds /}
    {param entry: $entry /}
  {/call}
  {call dma.entry.listentryvalue}
    {param style: 'short' /}
    {param value: $entry.short_description /}
    {param entry: $entry /}
  {/call}
{/deltemplate}

/**
 * The template for an entry summary.
 *
 * @param entry the entry to format
 *
 */
{deltemplate dma.entry.summary}
  <div class="summary">
    {call dma.page.title}
      {param title: $entry.given_name.print + ' - Summary' /}
    {/call}
    <h1>
      {if $entry.given_name.isDefined}
        {$entry.given_name.print}
      {else}
        {$entry.dmName}
      {/if}
      {sp}({$entry.name})
    </h1>
    {$entry.gender.print} {$entry.base.print}<br>

    {call dma.entry.overviewValue}
      {param prefix: 'CR' /}
      {param postfix: ';' /}
      {param entry: $entry /}
      {param value: $entry.challenge_rating /}
    {/call}
    {call dma.entry.overviewValue}
      {param entry: $entry /}
      {param value: $entry.size /}
    {/call}
    {call dma.entry.overviewValue}
      {param postfix: ';' /}
      {param entry: $entry /}
      {param value: $entry.__type /}
    {/call}
    {call dma.entry.overviewValue}
      {param prefix: 'HD' /}
      {param postfix: ';' /}
      {param entry: $entry /}
      {param value: $entry.hit_dice /}
    {/call}
    {call dma.entry.overviewValue}
      {param prefix: 'hp' /}
      {param entry: $entry /}
      {param value: $entry.hp /}
    {/call}
    {call dma.entry.overviewValue}
      {param prefix: ' of' /}
      {param postfix: ';' /}
      {param entry: $entry /}
      {param value: $entry.hp /}
    {/call}
    <br />
    {call dma.entry.overviewValue}
      {param prefix: 'Init' /}
      {param postfix: ';' /}
      {param entry: $entry /}
      {param combination: $entry.initiative /}
    {/call}
    {call dma.entry.overviewValue}
      {param prefix: 'Speed' /}
      {param postfix: ';' /}
      {param entry: $entry /}
      {param value: $entry.speed /}
    {/call}
    {call dma.entry.overviewValue}
      {param prefix: 'AC' /}
      {param postfix: ',' /}
      {param entry: $entry /}
      {param value: $entry.armor_class /}
    {/call}
    {call dma.entry.overviewValue}
      {param prefix: 'touch' /}
      {param postfix: ',' /}
      {param entry: $entry /}
      {param value: $entry.armor_class_touch /}
    {/call}
    {call dma.entry.overviewValue}
      {param prefix: 'flat-footed' /}
      {param postfix: ';' /}
      {param entry: $entry /}
      {param value: $entry.armor_class_flat_footed /}
    {/call}
    <br />
    {call dma.entry.overviewValue}
      {param prefix: 'Atk' /}
      {param postfix: ';' /}
      {param entry: $entry /}
      {param content}
        {foreach $weapon in $entry.attacks.weapons}
          {foreach $attack in $weapon.attacks}
            +{$attack |print}
            {if not isLast($attack)}/{/if}
          {/foreach}
          {sp}{$weapon.style |print}
          {sp}(
          {call dma.value.combined}
            {param combination: $weapon.damage /}
          {/call}
            /
            {call dma.value.combined}
              {param combination: $weapon.critical /}
            {/call}
           , {$weapon.name})
           {if not isLast($weapon)}
             , or{sp}
           {/if}
        {/foreach}
        {sp}(base{sp}
        <span class="windowed">
          +{$entry.attacks.base[0]}
          <span class="window base">
            {foreach $modifier in keys($entry.attacks.bases)}
              <span class="base-value">{$modifier}</span>
              {sp} from{sp}
              {foreach $name in $entry.attacks.bases[$modifier]}
                {$name}
                {if not isLast($name)}
                  ,
                {/if}
              {/foreach}
              <br />
            {/foreach}
          </span>
        </span>
        , grapple +{$entry.attacks.grapple |print})
      {/param}
    {/call}
    <br />
    {call dma.entry.overviewValue}
      {param prefix: '<div class="summary-title">Special Attacks</div>' /}
      {param postfix: ';' /}
      {param entry: $entry /}
      {param content}
        {foreach $attack in $entry.special_attack_summaries}
          <b>{$attack.name}</b>
          {switch $attack.number}
            {case -1}
            {case 0}
            {case 1}
              {sp}once per day
            {case 2}
              {sp}twice per day
            {default}
              {sp}{$attack.number} times per day
          {/switch}
          : {$attack.summary}
        <br />
        {/foreach}
      {/param}
    {/call}
  </div>
{/deltemplate}
